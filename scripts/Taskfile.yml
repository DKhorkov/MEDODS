version: '3'

tasks:
  docker_prod:
    desc: "Docker build and run."
    aliases:
      - prod
    cmds:
      - task: create_logs_folder
      - task: docker_build
      - task: docker_run

  create_logs_folder:
    desc: "Create logs folder for docker volume purposes."
    internal: true
    dir: ../
    cmds:
      - mkdir -p logs

  docker_build:
    desc: "Build docker container."
    aliases:
      - build
    cmd: sudo docker compose -f ../build/package/docker-compose.yml build

  docker_run:
    desc: "Launch docker container."
    aliases:
      - run
    cmd: sudo docker compose -f ../build/package/docker-compose.yml up

  docker_clean:
    desc: "Clean docker containers, images and volumes."
    aliases:
      - clean
    cmd: sudo docker system prune -a --volumes

  tests:
    desc: "Run tests and save coverage to ./tests/coverage folder."
    aliases:
      - test
    dir: ../
    cmds:
      - sudo chmod -R 777 postgres_data
      - sudo chmod -R 777 postgres_backups
      - mkdir -p ./tests/coverage
      - go test -v -coverprofile ./tests/coverage/coverage.out -coverpkg=./... ./tests...
      - go tool cover -html ./tests/coverage/coverage.out -o ./tests/coverage/coverage.html

  linters:
    desc: "Run linters."
    aliases:
      - lint
    dir: ../
    cmds:
      - sudo chmod -R 777 postgres_data
      - sudo chmod -R 777 postgres_backups
      - golangci-lint run -v --fix

  makemigrations:
    desc: "Create migration file with provided name."
    requires: # Make sure these variables are set before running
      vars: [ NAME ]
    vars:
      DIR: ./internal/database/migrations
    dir: ../
    cmds:
      - go install github.com/pressly/goose/v3/cmd/goose@latest
      - goose -dir {{.DIR}} create {{.NAME}} sql

  migrate:
    desc: "Apply all available migrations."
    aliases:
      - create_database
    vars:
      DIR: ./internal/database/migrations
      DRIVER: postgres
      DATABASE_URL: "postgresql://medods:medods@0.0.0.0:5432/medods"
    dir: ../
    cmds:
      - go install github.com/pressly/goose/v3/cmd/goose@latest
      - goose -dir {{.DIR}} {{.DRIVER}} {{.DATABASE_URL}} up

  migrate_to:
    desc: "Migrate up to a specific version."
    requires:
      vars: [ VERSION ]
    vars:
      DIR: ./internal/database/migrations
      DRIVER: postgres
      DATABASE_URL: "postgresql://medods:medods@0.0.0.0:5432/medods"
    dir: ../
    cmds:
      - go install github.com/pressly/goose/v3/cmd/goose@latest
      - goose -dir {{.DIR}} {{.DRIVER}} {{.DATABASE_URL}} up-to {{.VERSION}}

  downgrade_to:
    desc: "Rollback migrations to a specific version."
    requires:
      vars: [ VERSION ]
    vars:
      DIR: ./internal/database/migrations
      DRIVER: postgres
      DATABASE_URL: "postgresql://medods:medods@0.0.0.0:5432/medods"
    dir: ../
    cmds:
      - go install github.com/pressly/goose/v3/cmd/goose@latest
      - goose -dir {{.DIR}} {{.DRIVER}} {{.DATABASE_URL}} down-to {{.VERSION}}

  downgrade_to_base:
    desc: "Rollback all migrations (careful!)."
    aliases:
      - drop_tables
    vars:
      DIR: ./internal/database/migrations
      DRIVER: postgres
      DATABASE_URL: "postgresql://medods:medods@0.0.0.0:5432/medods"
    dir: ../
    cmds:
      - go install github.com/pressly/goose/v3/cmd/goose@latest
      - goose -dir {{.DIR}} {{.DRIVER}} {{.DATABASE_URL}} down-to 0

  migrations_status:
    desc: "Print status of all migrations."
    aliases:
      - status
    vars:
      DIR: ./internal/database/migrations
      DRIVER: postgres
      DATABASE_URL: "postgresql://medods:medods@0.0.0.0:5432/medods"
    dir: ../
    cmds:
      - go install github.com/pressly/goose/v3/cmd/goose@latest
      - goose -dir {{.DIR}} {{.DRIVER}} {{.DATABASE_URL}} status
